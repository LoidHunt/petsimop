-- Create ScreenGui
local gui = Instance.new("ScreenGui")
gui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create main frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 400)
frame.Position = UDim2.new(0.5, -150, 0.5, -200)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.BorderSizePixel = 0
frame.Parent = gui

-- Create title bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
titleBar.BorderSizePixel = 0
titleBar.Parent = frame

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 1, 0)
title.BackgroundTransparency = 1
title.Text = "Wacky Wizards"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextSize = 18
title.Font = Enum.Font.SourceSansBold
title.Parent = titleBar

-- Create scrolling container for items
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, -20, 0.7, 0)
scrollFrame.Position = UDim2.new(0, 10, 0, 40)
scrollFrame.BackgroundTransparency = 1
scrollFrame.ScrollBarThickness = 6
scrollFrame.Parent = frame

-- Variables
SelectedItem = "Brain"
Items = {}

-- Get items
for i,v in pairs(game:GetService("Workspace").PlayerCauldrons:GetDescendants()) do
    if v.ClassName == "TextLabel" then
        if v.Text == "YOUR CAULDRON" then
            for i,v1 in pairs(game:GetService("Workspace").Interactions[v.Parent.Parent.Parent.Name]:GetChildren()) do
                if v1.ClassName == "Model" then
                    table.insert(Items,v1.Name)
                end
            end
        end
    end
end

-- Create item buttons
local buttonHeight = 30
local padding = 5

for i, item in ipairs(Items) do
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -10, 0, buttonHeight)
    button.Position = UDim2.new(0, 5, 0, (i-1) * (buttonHeight + padding))
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.Text = item
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSans
    button.TextSize = 14
    button.Parent = scrollFrame
    
    button.MouseButton1Click:Connect(function()
        SelectedItem = item
        for _, btn in ipairs(scrollFrame:GetChildren()) do
            btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        end
        button.BackgroundColor3 = Color3.fromRGB(80, 120, 80)
    end)
end

scrollFrame.CanvasSize = UDim2.new(0, 0, 0, (#Items * (buttonHeight + padding)))

-- Create action buttons
local function createActionButton(text, position, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.8, 0, 0, 35)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(60, 120, 60)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSansBold
    button.TextSize = 16
    button.Parent = frame
    button.MouseButton1Click:Connect(callback)
    return button
end

-- Add action buttons
createActionButton("Put Into Cauldron", UDim2.new(0.1, 0, 0.75, 0), function()
    for i,v in pairs(game:GetService("Workspace").PlayerCauldrons:GetDescendants()) do
        if v.ClassName == "TextLabel" and v.Text == "YOUR CAULDRON" then
            local args = {
                [1] = "PickUpItem",
                [2] = workspace.Interactions[v.Parent.Parent.Parent.Name][SelectedItem],
            }
            game:GetService("ReplicatedStorage").RemoteEvent:FireServer(unpack(args))
            
            args = {
                [1] = "FireAllClients",
                [2] = "WeldItemToHand",
                [3] = workspace.Interactions[v.Parent.Parent.Parent.Name][SelectedItem].Main.GripAttachment,
                [4] = workspace[game.Players.LocalPlayer.Name].RightHand.RightGripAttachment,
            }
            game:GetService("ReplicatedStorage").RemoteEvent:FireServer(unpack(args))
            
            args = {
                [1] = "FireAllClients",
                [2] = "UnweldItemFromHand", 
                [3] = workspace.Interactions[v.Parent.Parent.Parent.Name][SelectedItem].Main,
            }
            game:GetService("ReplicatedStorage").RemoteEvent:FireServer(unpack(args))
            
            args = {
                [1] = "AddIngredientToCauldron",
                [2] = workspace.PlayerCauldrons[v.Parent.Parent.Parent.Name].CauldronSet.Cauldron,
                [3] = workspace.Interactions[v.Parent.Parent.Parent.Name][SelectedItem],
            }
            game:GetService("ReplicatedStorage").RemoteEvent:FireServer(unpack(args))
            
            args = {
                [1] = "FireAllClients",
                [2] = "EmitParticles",
                [3] = workspace.PlayerCauldrons[v.Parent.Parent.Parent.Name].CauldronSet.Cauldron.Contents.ItemAdded,
                [4] = {["Duration"] = 0.8}
            }
            game:GetService("ReplicatedStorage").RemoteEvent:FireServer(unpack(args))
        end
    end
end)

createActionButton("Spawn Potion", UDim2.new(0.1, 0, 0.85, 0), function()
    for i,v in pairs(game:GetService("Workspace").PlayerCauldrons:GetDescendants()) do
        if v.ClassName == "TextLabel" and v.Text == "YOUR CAULDRON" then
            game:GetService("ReplicatedStorage").RemoteEvent:FireServer("AttemptBottlePotion",workspace.PlayerCauldrons[v.Parent.Parent.Parent.Name].CauldronSet.Cauldron)
        end
    end
end)

createActionButton("Drain Cauldron", UDim2.new(0.1, 0, 0.95, 0), function()
    for i,v in pairs(workspace.Interactions:GetChildren()) do
        game:GetService("ReplicatedStorage").RemoteEvent:FireServer("PickUpPotion", v)
    end
    
    for i,v in pairs(game:GetService("Workspace").PlayerCauldrons:GetDescendants()) do
        if v.ClassName == "TextLabel" and v.Text == "YOUR CAULDRON" then
            game:GetService("ReplicatedStorage").RemoteEvent:FireServer("AttemptDrainCauldron",workspace.PlayerCauldrons[v.Parent.Parent.Parent.Name].CauldronSet.Cauldron)
        end
    end
end)

-- Make GUI draggable
local UserInputService = game:GetService("UserInputService")
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
